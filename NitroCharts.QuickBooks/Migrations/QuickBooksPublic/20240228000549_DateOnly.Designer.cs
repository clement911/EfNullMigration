// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NitroCharts.QuickBooks;

#nullable disable

namespace NitroCharts.QuickBooks.Migrations.QuickBooksPublic
{
    [DbContext(typeof(QuickBooksPublicContext))]
    [Migration("20240228000549_DateOnly")]
    partial class DateOnly
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("quickbooks_internal")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NitroCharts.QuickBooks.Account", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("AccountAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("AccountSubType")
                        .HasColumnType("varchar(100)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("AccountType")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("AcctNum")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .HasColumnType("varchar(9)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("CurrentBalance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CurrentBalanceWithSubAccounts")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Level1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("ParentAccountId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("SubAccount")
                        .HasColumnType("bit");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TxnLocationType")
                        .HasMaxLength(19)
                        .HasColumnType("nvarchar(19)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Account", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Bill", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("APAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Balance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("HomeBalance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IncludeInAnnualTPAR")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalesTermId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Bill", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.BillLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillableStatus")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TDSSectionTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "BillId", "Index");

                    b.ToTable("BillLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.BillPayment", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("APAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CheckPayment_BankAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("CheckPayment_PrintStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("CreditCardPayment_CCAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PayType")
                        .HasColumnType("varchar(10)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(19)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("BillPayment", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.BillPaymentLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("BillPaymentId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("TxnId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TxnLineId")
                        .HasColumnType("bigint");

                    b.Property<string>("TxnType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "BillPaymentId", "Index");

                    b.ToTable("BillPaymentLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.BillTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "BillId", "Index");

                    b.ToTable("BillTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Budget", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BudgetEntryType")
                        .HasColumnType("varchar(9)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("BudgetType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Budget", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.BudgetLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("BudgetId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("BudgetDate")
                        .HasColumnType("date");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "BudgetId", "Index");

                    b.ToTable("BudgetLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.BundleItemLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("BundleItemId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "BundleItemId", "Index");

                    b.ToTable("BundleItemLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Class", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Level1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ParentId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("SubClass")
                        .HasColumnType("bit");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Class", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.CompanyCurrency", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("CompanyCurrency", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.CompanyInfo", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("CompanyStartDate")
                        .HasColumnType("date");

                    b.Property<string>("Country")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("FiscalYearStartMonth")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("LegalName")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("NameValuesJSON")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("SupportedLanguages")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("CompanyInfo", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.CreditCardPayment", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("BankAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("CheckNum")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("CreditCardAccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Memo")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrintStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("CreditCardPayment", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.CreditMemo", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ApplyTaxAfterDiscount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Balance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("BillAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("BillAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillEmailAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField1")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField2")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField3")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerMemo")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmailStatus")
                        .HasColumnType("varchar(10)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("HomeBalance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HomeTotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<string>("PrintStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("RemainingCredit")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("SalesTermId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipToAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShipToAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShipToAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("TaxExemptionId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("CreditMemo", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.CreditMemoLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("DiscountAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("GroupItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupLineId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("GroupQuantity")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("ServiceDate")
                        .HasColumnType("date");

                    b.Property<string>("SpecialItemId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxClassificationId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "CreditMemoId", "Index");

                    b.ToTable("CreditMemoLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.CreditMemoTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "CreditMemoId", "Index");

                    b.ToTable("CreditMemoTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Customer", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ARAccountId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AlternatePhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("BillWithParent")
                        .HasColumnType("bit");

                    b.Property<string>("BillingAddress_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillingAddress_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillingAddress_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("BillingAddress_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillingAddress_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillingAddress_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillingAddress_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillingAddress_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillingAddress_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("BillingAddress_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillingAddress_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("DefaultTaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("GSTIN")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("GSTRegistrationType")
                        .HasColumnType("varchar(15)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("GivenName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("IsProject")
                        .HasColumnType("bit");

                    b.Property<bool?>("Job")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<byte?>("Level")
                        .HasColumnType("tinyint");

                    b.Property<string>("Level1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("OpenBalanceDate")
                        .HasColumnType("date");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<string>("PreferredDeliveryMethod")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrimaryEmailAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryPhoneNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryTaxIdentifier")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrintOnCheckName")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ResaleNum")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("SalesTermId")
                        .HasColumnType("bigint");

                    b.Property<string>("SecondaryTaxIdentifier")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShippingAddress_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShippingAddress_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShippingAddress_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShippingAddress_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShippingAddress_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShippingAddress_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShippingAddress_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShippingAddress_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShippingAddress_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShippingAddress_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShippingAddress_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Suffix")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<byte?>("TaxExemptionReasonId")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Taxable")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("WebAddressUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Customer", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.CustomerType", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("CustomerType", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Deposit", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("CashBack_AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("CashBack_Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CashBack_Memo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("DepositToAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("HomeTotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.Property<string>("TxnSource")
                        .HasColumnType("varchar(100)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Deposit", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.DepositLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("DepositId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CheckNum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long>("LinkedTxnId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LinkedTxnLineId")
                        .HasColumnType("bigint");

                    b.Property<string>("LinkedTxnType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxApplicableOn")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TxnType")
                        .HasColumnType("varchar(21)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "DepositId", "Index");

                    b.ToTable("DepositLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.DepositTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("DepositId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "DepositId", "Index");

                    b.ToTable("DepositTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Employee", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BillRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("BillableTime")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("CostRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(6)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("GivenName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("HiredDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("Organization")
                        .HasColumnType("bit");

                    b.Property<string>("PrimaryAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("PrimaryAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("PrimaryAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("PrimaryAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("PrimaryAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryEmailAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryPhone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrintOnCheckName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("ReleasedDate")
                        .HasColumnType("date");

                    b.Property<string>("SSN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Suffix")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Title")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("V4IDPseudonym")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Employee", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Estimate", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("AcceptedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("AcceptedDate")
                        .HasColumnType("date");

                    b.Property<bool?>("ApplyTaxAfterDiscount")
                        .HasColumnType("bit");

                    b.Property<string>("BillAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("BillAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("BillAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillEmailAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField1")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField2")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField3")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerMemo")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<string>("EmailStatus")
                        .HasColumnType("varchar(10)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<bool?>("FreeFormAddress")
                        .HasColumnType("bit");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("HomeTotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PrintStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalesTermId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("ShipDate")
                        .HasColumnType("date");

                    b.Property<string>("ShipFromAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipFromAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShipFromAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipFromAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShipFromAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShipToAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShipToAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("TaxExemptionId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(64)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TxnStatus")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Estimate", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.EstimateLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("EstimateId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("DiscountAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("GroupItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupLineId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("GroupQuantity")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("ServiceDate")
                        .HasColumnType("date");

                    b.Property<string>("SpecialItemId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxClassificationId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "EstimateId", "Index");

                    b.ToTable("EstimateLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.EstimateTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("EstimateId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "EstimateId", "Index");

                    b.ToTable("EstimateTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.ExchangeRate", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("SourceCurrencyCode")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TargetCurrencyCode")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateOnly>("AsOfDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal>("Rate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "SourceCurrencyCode", "TargetCurrencyCode", "AsOfDate");

                    b.ToTable("ExchangeRate", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Invoice", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("AllowOnlineACHPayment")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowOnlineCreditCardPayment")
                        .HasColumnType("bit");

                    b.Property<bool?>("ApplyTaxAfterDiscount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Balance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("BillAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("BillAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillEmailAddress_BCC")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillEmailAddress_CC")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillEmailAddress_To")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField1")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField2")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField3")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerMemo")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Delivery_Time")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Delivery_Type")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("Deposit")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("DepositToAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<string>("EmailStatus")
                        .HasColumnType("varchar(10)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("FreeFormAddress")
                        .HasColumnType("bit");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("HomeBalance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HomeTotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoiceLink")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PrintStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalesTermId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("ShipDate")
                        .HasColumnType("date");

                    b.Property<string>("ShipFromAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipFromAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShipFromAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipFromAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShipFromAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShipToAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShipToAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("TaxExemptionId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingNum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TransactionLocationType")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TxnSource")
                        .HasColumnType("varchar(50)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Invoice", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.InvoiceLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("DiscountAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("GroupItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupLineId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("GroupQuantity")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("ServiceDate")
                        .HasColumnType("date");

                    b.Property<string>("SpecialItemId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<int?>("TDSSectionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxClassificationId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "InvoiceId", "Index");

                    b.ToTable("InvoiceLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.InvoiceTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "InvoiceId", "Index");

                    b.ToTable("InvoiceTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Item", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("AbatementRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("AssetAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("ExpenseAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("InvStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ItemCategoryType")
                        .HasColumnType("varchar(7)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Level1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PrefVendorId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PrintGroupedItems")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PurchaseCost")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PurchaseDesc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PurchaseTaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("PurchaseTaxIncluded")
                        .HasColumnType("bit");

                    b.Property<decimal?>("QtyOnHand")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReorderPoint")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReverseChargeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SalesTaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("SalesTaxIncluded")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("Sku")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("SubItem")
                        .HasColumnType("bit");

                    b.Property<string>("TaxClassificationId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("Taxable")
                        .HasColumnType("bit");

                    b.Property<bool?>("TrackQtyOnHand")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("UQCDisplayText")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("UQCId")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Item", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.JournalEntry", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Adjustment")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("HomeTotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(64)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("JournalEntry", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.JournalEntryLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("JournalEntryId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillableStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("JournalCodeId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PostingType")
                        .HasColumnType("varchar(6)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateOnly?>("ServiceDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("TaxAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxApplicableOn")
                        .HasColumnType("varchar(8)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "JournalEntryId", "Index");

                    b.ToTable("JournalEntryLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.JournalEntryTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("JournalEntryId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "JournalEntryId", "Index");

                    b.ToTable("JournalEntryTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Location", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Level1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Level5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Location", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Payment", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ARAccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("CreditCardPayment_CreditChargeInfo_Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_BillAddrStreet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<byte?>("CreditCardPayment_CreditChargeInfo_CcExpiryMonth")
                        .HasColumnType("tinyint");

                    b.Property<short?>("CreditCardPayment_CreditChargeInfo_CcExpiryYear")
                        .HasColumnType("smallint");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_NameOnAcct")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("CreditCardPayment_CreditChargeInfo_ProcessPayment")
                        .HasColumnType("bit");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_Type")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("CreditCardPayment_Response_CCTransId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CreditCardPayment_Response_Status")
                        .HasColumnType("varchar(9)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreditCardPayment_Response_TxnAuthorizationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("CreditCardPayment_esponse_AuthCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepositToAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentRefNum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(19)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.Property<string>("TxnSource")
                        .HasColumnType("varchar(50)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("UnappliedAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Payment", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.PaymentLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("PaymentId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("TxnId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TxnLineId")
                        .HasColumnType("bigint");

                    b.Property<string>("TxnType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "PaymentId", "Index");

                    b.ToTable("PaymentLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.PaymentMethod", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(15)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("PaymentMethod", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Preferences", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("AccountingInfoPrefs_BookCloseDate")
                        .HasColumnType("date");

                    b.Property<bool?>("AccountingInfoPrefs_ClassTrackingPerTxn")
                        .HasColumnType("bit");

                    b.Property<bool?>("AccountingInfoPrefs_ClassTrackingPerTxnLine")
                        .HasColumnType("bit");

                    b.Property<string>("AccountingInfoPrefs_CustomerTerminology")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("AccountingInfoPrefs_DepartmentTerminology")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("AccountingInfoPrefs_FirstMonthOfFiscalYear")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("AccountingInfoPrefs_TaxForm")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("AccountingInfoPrefs_TaxYearMonth")
                        .HasColumnType("varchar(9)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("AccountingInfoPrefs_TrackLocations")
                        .HasColumnType("bit");

                    b.Property<bool?>("AccountingInfoPrefs_UseAccountNumbers")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("CurrencyPrefs_HomeCurrency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("CurrencyPrefs_MultiCurrencyEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("EmailMessagesPrefs_EstimateMessage_Message")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmailMessagesPrefs_EstimateMessage_Subject")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmailMessagesPrefs_InvoiceMessage_Message")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmailMessagesPrefs_InvoiceMessage_Subject")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmailMessagesPrefs_SalesReceiptMessage_Message")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmailMessagesPrefs_SalesReceiptMessage_Subject")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmailMessagesPrefs_StatementMessage_Message")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmailMessagesPrefs_StatementMessage_Subject")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("OtherPrefs_NameValuesJSON")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("ProductAndServicesPrefs_ForPurchase")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductAndServicesPrefs_ForSales")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductAndServicesPrefs_QuantityOnHand")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductAndServicesPrefs_QuantityWithPriceAndRate")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReportPrefs_CalcAgingReportFromTxnDate")
                        .HasColumnType("bit");

                    b.Property<string>("ReportPrefs_ReportBasis")
                        .HasColumnType("varchar(7)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("SalesFormsPrefs_AllowDeposit")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesFormsPrefs_AllowDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesFormsPrefs_AllowEstimates")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesFormsPrefs_AllowServiceDate")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesFormsPrefs_AllowShipping")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesFormsPrefs_AutoApplyCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesFormsPrefs_AutoApplyPayments")
                        .HasColumnType("bit");

                    b.Property<string>("SalesFormsPrefs_CustomFieldJSON")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("SalesFormsPrefs_CustomTxnNumbers")
                        .HasColumnType("bit");

                    b.Property<string>("SalesFormsPrefs_DefaultCustomerMessage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("SalesFormsPrefs_DefaultDiscountAccount")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("SalesFormsPrefs_DefaultShippingAccount")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("SalesFormsPrefs_DefaultTermsId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("SalesFormsPrefs_ETransactionAttachPDF")
                        .HasColumnType("bit");

                    b.Property<string>("SalesFormsPrefs_ETransactionEnabledStatus")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("SalesFormsPrefs_ETransactionPaymentEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesFormsPrefs_EmailCopyToCompany")
                        .HasColumnType("bit");

                    b.Property<string>("SalesFormsPrefs_EstimateMessage")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("SalesFormsPrefs_IPNSupportEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("SalesFormsPrefs_SalesEmailBcc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("SalesFormsPrefs_SalesEmailCc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("SalesFormsPrefs_UsingPriceLevels")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalesFormsPrefs_UsingProgressInvoicing")
                        .HasColumnType("bit");

                    b.Property<bool?>("TaxPrefs_PartnerTaxEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TaxPrefs_TaxGroupCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("TaxPrefs_UsingSalesTax")
                        .HasColumnType("bit");

                    b.Property<bool?>("TimeTrackingPrefs_BillCustomers")
                        .HasColumnType("bit");

                    b.Property<bool?>("TimeTrackingPrefs_MarkTimeEntriesBillable")
                        .HasColumnType("bit");

                    b.Property<bool?>("TimeTrackingPrefs_ShowBillRateToAll")
                        .HasColumnType("bit");

                    b.Property<bool?>("TimeTrackingPrefs_UseServices")
                        .HasColumnType("bit");

                    b.Property<string>("TimeTrackingPrefs_WorkWeekStartDate")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("VendorAndPurchasesPrefs_BillableExpenseTracking")
                        .HasColumnType("bit");

                    b.Property<decimal?>("VendorAndPurchasesPrefs_DefaultMarkup")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("VendorAndPurchasesPrefs_DefaultMarkupAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VendorAndPurchasesPrefs_DefaultTermsId")
                        .HasColumnType("bigint");

                    b.Property<string>("VendorAndPurchasesPrefs_POCustomFieldJSON")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("VendorAndPurchasesPrefs_TPAREnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("VendorAndPurchasesPrefs_TrackingByCustomer")
                        .HasColumnType("bit");

                    b.HasKey("ConnectionId");

                    b.ToTable("Preferences", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Purchase", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool?>("Credit")
                        .HasColumnType("bit");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("IncludeInAnnualTPAR")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrintStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("RemitToAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("RemitToAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("RemitToAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("RemitToAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("RemitToAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("RemitToAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("RemitToAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("RemitToAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("RemitToAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("RemitToAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("RemitToAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TxnSource")
                        .HasColumnType("varchar(100)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Purchase", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.PurchaseLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillableStatus")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "PurchaseId", "Index");

                    b.ToTable("PurchaseLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.PurchaseOrder", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("APAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField1")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField2")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField3")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<string>("EmailStatus")
                        .HasColumnType("varchar(10)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Memo")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("POEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("POStatus")
                        .HasColumnType("varchar(6)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalesTermId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShipAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShipAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipMethod")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("ShipToCustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("VendorAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("VendorAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("VendorAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("VendorAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("VendorAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("VendorAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("VendorAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("VendorAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("VendorAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("VendorAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("VendorAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("PurchaseOrder", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.PurchaseOrderLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillableStatus")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "PurchaseOrderId", "Index");

                    b.ToTable("PurchaseOrderLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.PurchaseOrderTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "PurchaseOrderId", "Index");

                    b.ToTable("PurchaseOrderTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.PurchaseTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "PurchaseId", "Index");

                    b.ToTable("PurchaseTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.RefundReceipt", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ApplyTaxAfterDiscount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Balance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("BillAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("BillAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillEmailAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CheckPayment_AcctNum")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CheckPayment_BankName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CheckPayment_CheckNum")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CheckPayment_NameOnAcct")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CheckPayment_Status")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("CreditCardPayment_CreditChargeInfo_Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_BillAddrStreet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<byte?>("CreditCardPayment_CreditChargeInfo_CcExpiryMonth")
                        .HasColumnType("tinyint");

                    b.Property<short?>("CreditCardPayment_CreditChargeInfo_CcExpiryYear")
                        .HasColumnType("smallint");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_NameOnAcct")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("CreditCardPayment_CreditChargeInfo_ProcessPayment")
                        .HasColumnType("bit");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_Type")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("CreditCardPayment_Response_CCTransId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CreditCardPayment_Response_Status")
                        .HasColumnType("varchar(9)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreditCardPayment_Response_TxnAuthorizationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("CreditCardPayment_esponse_AuthCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField1")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField2")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField3")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerMemo")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<long?>("DepositToAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("HomeBalance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HomeTotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentRefNum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PaymentType")
                        .HasColumnType("varchar(10)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrintStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipToAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShipToAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShipToAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("TaxExemptionId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TxnSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("RefundReceipt", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.RefundReceiptLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RefundReceiptId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("DiscountAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("GroupItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupLineId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("GroupQuantity")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("ServiceDate")
                        .HasColumnType("date");

                    b.Property<string>("SpecialItemId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxClassificationId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "RefundReceiptId", "Index");

                    b.ToTable("RefundReceiptLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.RefundReceiptTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RefundReceiptId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "RefundReceiptId", "Index");

                    b.ToTable("RefundReceiptTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.ReimburseCharge", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("HasBeenInvoiced")
                        .HasColumnType("bit");

                    b.Property<decimal?>("HomeTotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("ReimburseCharge", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.ReimburseChargeLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReimburseChargeId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "ReimburseChargeId", "Index");

                    b.ToTable("ReimburseChargeLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.SalesReceipt", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ApplyTaxAfterDiscount")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Balance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("BillAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("BillAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillEmailAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("CreditCardPayment_CreditChargeInfo_Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_BillAddrStreet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<byte?>("CreditCardPayment_CreditChargeInfo_CcExpiryMonth")
                        .HasColumnType("tinyint");

                    b.Property<short?>("CreditCardPayment_CreditChargeInfo_CcExpiryYear")
                        .HasColumnType("smallint");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_NameOnAcct")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("CreditCardPayment_CreditChargeInfo_ProcessPayment")
                        .HasColumnType("bit");

                    b.Property<string>("CreditCardPayment_CreditChargeInfo_Type")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("CreditCardPayment_Response_CCTransId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CreditCardPayment_Response_Status")
                        .HasColumnType("varchar(9)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime?>("CreditCardPayment_Response_TxnAuthorizationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("CreditCardPayment_esponse_AuthCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField1")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField2")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CustomField3")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerMemo")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Delivery_Time")
                        .HasMaxLength(16)
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Delivery_Type")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("DepositToAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("EmailStatus")
                        .HasColumnType("varchar(10)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("FreeFormAddress")
                        .HasColumnType("bit");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("HomeBalance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HomeTotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentRefNum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrintStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("ShipDate")
                        .HasColumnType("date");

                    b.Property<string>("ShipFromAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipFromAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShipFromAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipFromAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShipFromAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipFromAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("ShipToAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ShipToAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("ShipToAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ShipToAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTax")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingNum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(64)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TxnSource")
                        .HasColumnType("varchar(50)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("SalesReceipt", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.SalesReceiptLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("SalesReceiptId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("DiscountAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("GroupItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupLineId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("GroupQuantity")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemAccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("ServiceDate")
                        .HasColumnType("date");

                    b.Property<string>("SpecialItemId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxClassificationId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "SalesReceiptId", "Index");

                    b.ToTable("SalesReceiptLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.SalesReceiptTaxLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("SalesReceiptId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetAmountTaxable")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OverrideDeltaAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PercentBased")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TaxInclusiveAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "SalesReceiptId", "Index");

                    b.ToTable("SalesReceiptTaxLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TaxAgency", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateOnly?>("LastFileDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("TaxAgencyConfig")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("TaxRegistrationNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("TaxTrackedOnPurchases")
                        .HasColumnType("bit");

                    b.Property<bool?>("TaxTrackedOnSales")
                        .HasColumnType("bit");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("TaxAgency", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TaxClassification", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(128)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ApplicableToJSON")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("Description")
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<byte?>("Level")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("ParentId")
                        .HasColumnType("varchar(128)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("TaxClassification", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TaxCode", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("Hidden")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxCodeConfigType")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("TaxGroup")
                        .HasColumnType("bit");

                    b.Property<bool?>("Taxable")
                        .HasColumnType("bit");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("TaxCode", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TaxCodeRatePurchase", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TaxOrder")
                        .HasColumnType("int");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxTypeApplicable")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "TaxCodeId", "Index");

                    b.ToTable("TaxCodeRatePurchase", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TaxCodeRateSales", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TaxOrder")
                        .HasColumnType("int");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxTypeApplicable")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "TaxCodeId", "Index");

                    b.ToTable("TaxCodeRateSales", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TaxPayment", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("PaymentAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PaymentAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<bool?>("Refund")
                        .HasColumnType("bit");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("TaxPayment", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TaxRate", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DisplayType")
                        .HasColumnType("varchar(22)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("EffectiveTaxRatesJSON")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("RateValue")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpecialTaxType")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("TaxReturnLineId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("TaxRate", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Term", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<byte?>("DayOfMonthDue")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("DiscountDayOfMonth")
                        .HasColumnType("tinyint");

                    b.Property<short?>("DiscountDays")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountPercent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("DueDays")
                        .HasColumnType("smallint");

                    b.Property<short?>("DueNextMonthDays")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Name")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Term", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TimeActivity", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("BillableStatus")
                        .HasColumnType("varchar(13)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<short?>("BreakHours")
                        .HasColumnType("smallint");

                    b.Property<byte?>("BreakMinutes")
                        .HasColumnType("tinyint");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("CostRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("datetimeoffset(0)");

                    b.Property<decimal?>("HourlyRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("Hours")
                        .HasColumnType("smallint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Minutes")
                        .HasColumnType("tinyint");

                    b.Property<string>("NameOf")
                        .HasColumnType("varchar(8)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("PayrollItemId")
                        .HasColumnType("varchar(128)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTimeOffset?>("StartTime")
                        .HasColumnType("datetimeoffset(0)");

                    b.Property<bool?>("Taxable")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("TimeActivity", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TransactionLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("APPaidStatus")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ARPaidStatus")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("AdjustmentStatus")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("CheckPrintStatus")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ClearedStatus")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("DistributionAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ForeignAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ForeignEntryAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ForeignOpenBalance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ForeignTaxAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ForeignTaxableAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HomeAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCash")
                        .HasColumnType("bit");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OnlineBankingStatus")
                        .HasColumnType("varchar(64)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("OpenBalance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("PaymentMethodId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PersistedAt")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("Quantity")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SignedDebitAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubType")
                        .HasColumnType("varchar(64)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxableAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxableStatus")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(64)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Date", "TransactionId", "Id");

                    b.HasIndex("ConnectionId", "TransactionId");

                    b.ToTable("TransactionLine", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.TransactionLineDateChecksum", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<byte[]>("SHA256Checksum")
                        .IsRequired()
                        .HasColumnType("binary(32)");

                    b.HasKey("ConnectionId", "Date");

                    b.ToTable("TransactionLineDateChecksum", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Transfer", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("FromAccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Transfer", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.Vendor", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("APAccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("AcctNum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AlternatePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("Balance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillAddr_City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Lat")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(9,7)");

                    b.Property<string>("BillAddr_Line1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_Line5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillAddr_Long")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("BillAddr_PostalCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("BillAddr_State")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("BillRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("CostRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Fax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("GSTIN")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("GSTRegistrationType")
                        .HasColumnType("varchar(15)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("GivenName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("HasTPAR")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Mobile")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryEmailAddr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrimaryPhone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("PrintOnCheckName")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("Suffix")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("TaxReportingBasis")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("TermId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<bool?>("Vendor1099")
                        .HasColumnType("bit");

                    b.Property<string>("VendorPaymentBankDetail_BankAccountName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("VendorPaymentBankDetail_BankAccountNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("VendorPaymentBankDetail_BankBranchIdentifier")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("VendorPaymentBankDetail_StatementText")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("WebAddr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("Vendor", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.VendorCredit", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("APAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Balance")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GlobalTaxCalculation")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<bool?>("IncludeInAnnualTPAR")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PrivateNote")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<long?>("RecurringTransactionId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionLocationType")
                        .HasColumnType("varchar(24)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<DateOnly?>("TxnDate")
                        .HasColumnType("date");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("ConnectionId", "Id");

                    b.ToTable("VendorCredit", "quickbooks");
                });

            modelBuilder.Entity("NitroCharts.QuickBooks.VendorCreditLine", b =>
                {
                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint");

                    b.Property<long>("VendorCreditId")
                        .HasColumnType("bigint");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillableStatus")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<string>("ClassId")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .UseCollation("Latin1_General_100_CI_AI_SC");

                    b.Property<string>("DetailType")
                        .HasColumnType("varchar(32)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<short?>("LineNum")
                        .HasColumnType("smallint");

                    b.Property<long?>("MarkupInfo_MarkUpIncomeAccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MarkupInfo_Percent")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("MarkupInfo_PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PriceLevelId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Qty")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxAmount")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCodeId")
                        .HasColumnType("varchar(16)")
                        .UseCollation("Latin1_General_100_BIN2");

                    b.Property<decimal?>("TaxInclusiveAmt")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasPrecision(19, 8)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ConnectionId", "VendorCreditId", "Index");

                    b.ToTable("VendorCreditLine", "quickbooks");
                });
#pragma warning restore 612, 618
        }
    }
}
